hub:
  network:
    cloudlet:
      endpoint: "<GABRIEL SERVER ENDPOINT>"
      hub_to_gabriel: 9099
    dataplane:
      endpoint: "0.0.0.0"
      driver_to_hub:
        telemetry: 3001
        image_sensor: 3002
      mission_to_hub: 3003
    controlplane:
      endpoint: "0.0.0.0"
      hub_to_driver: 3004
      hub_to_mission: 3005
      mission_to_hub: 3006
      hub_to_datasink: 3007
      commander_to_hub: 5003
  computes:
    - compute_id: 'default_compute'
      compute_class: 'GabrielCompute'
  logging:
    # Log level can be one of {INFO, DEBUG, WARNING, ERROR}
    log_level: "<LOG LEVEL>"
    # Leave file as "" if you do not want to write the log
    log_file: "<FILENAME>"
datasinks:
  # Comma-separated file paths for datasinks to register
  paths: "<PATH TO FILE 1,PATH TO FILE 2,...>"
  logging:
    # Log level can be one of {INFO, DEBUG, WARNING, ERROR}
    log_level: "<LOG LEVEL>"
    # Leave file as "" if you do not want to write the log
    log_file: "<FILENAME>"
mission:
  logging:
    # Log level can be one of {INFO, DEBUG, WARNING, ERROR}
    log_level: "<LOG LEVEL>"
    # Leave file as "" if you do not want to write the log
    log_file: "<FILENAME>"
driver:
  id: "<DRONE ID>"
  # Type of driver to run - must match a directory in drivers
  type: "<DRONE TYPE>"
  # Path to device file relative to type directory
  module: "<DRONE FILE PATH>"
  connection_string: "0.0.0.0:0"
  # For passing in device-specific flags
  keyword_args: {}
  logging:
    # Log level can be one of {INFO, DEBUG, WARNING, ERROR}
    log_level: "<LOG LEVEL>"
    # Leave file as "" if you do not want to write the log
    log_file: "<FILENAME>"
