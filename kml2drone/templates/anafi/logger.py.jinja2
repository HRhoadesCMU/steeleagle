import time

broadcasting = True
logFile = "log.txt"

plan = [] 
{% for k,v in placemarks.items() -%}
{% for c in v.coords %}
plan.append({'lat': {{c.lat}}, 'lng': {{c.lng}}})
{%- endfor %}
{% endfor %}
current_loc = {'latitude': 40.4136589, 'longitude': -79.9495332, 'altitude': 10} #use global current_loc to access

# Transponder thread which will log the drone's location to a local file.
def transponder_thread(drone, tag):
    global broadcasting
    global current_loc
    start = time.time()
    with open(logFile, 'a') as f:
        while (broadcasting):
            try:
                loc = drone.get_state(GpsLocationChanged)
                logData = "{0} {1} {2} {3}\n".format(loc["latitude"], loc["longitude"], loc["altitude"], time.time() - start)
                f.write(logData)
                current_loc = loc
                time.sleep({{ sample }})
            except ConnectionError:
                #if we can't connect to the dashboard, stop trying to post
                broadcasting = False
            except RuntimeError:
                # This means the data is not available just yet. Olympe will raise a runtime error if any of the
                # get_state() calls fail.
                pass
            except Exception as e:
                print(e)

