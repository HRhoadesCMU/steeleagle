#!/usr/bin/env python3

# Copyright 2021 Carnegie Mellon University
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

{% include "./anafi/imports.py.jinja2" %}
{%- if sim == False %}
{% include "./anafi/transponder.py.jinja2" %}
{% else %}
{% include "./anafi/logger.py.jinja2" %}
{% endif -%}

{% include "./anafi/streaming.py.jinja2" %}

{% import './anafi/macros.py.jinja2' as macros with context%}

logger = logging.getLogger(__name__)

if __name__ == "__main__":
        
    #eventually IP will be specified depending on what drone is chosen
    IP = "{{ drone_ip|default('192.168.42.1')}}"
    drone = olympe.Drone(IP)
    drone.connect()
    drone(TakeOff()).wait().success()
    {{ macros.TransponderThreadStart() }}

    {% for k,v in placemarks.items() %}
    #####{{v.name}}/{{v.task}} START#####
    #####{{v.kwargs}}#####
    {%- if v.task == "heimdall_TakePhotosAlongPath" %}
    {{ macros.TakePhotosAlongPath(**v.kwargs) }}
    {% elif v.task == "SetNewHome" %}
    {{ macros.SetNewHome(**v.kwargs) }}
    {% elif v.task == "MoveTo" %}
    {{ macros.MoveTo(**v.kwargs) }}
    {% elif v.task == "heimdall_DetectObjectsAlongPath" %}
    {{ macros.DetectObjectsAlongPath(**v.kwargs) }}
    {% elif v.task == "Land" %}
    {{ macros.Land(**v.kwargs) }}
    {% endif -%}
    #####{{v.name}}/{{v.task}} END#####
    {% endfor %}

    broadcasting = False
    {{ macros.TransponderThreadStop() }}
    drone.disconnect()
