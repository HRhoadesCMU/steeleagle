// ===== Top level =====
start: _NL* data_block? actions_block events_block? mission_block

// ===== Data =====
data_block: "Data" _NL data_section
data_section: (datum_decl _NL*)*
datum_decl: NAME NAME datum_body?
datum_body: "(" [attr ("," attr)*] ")"

// ===== Actions =====
actions_block: "Actions" COLON _NL actions_section
actions_section: (action_decl | _NL)+
action_decl: NAME NAME action_body? _NL
action_body: LPAREN [attr (COMMA attr)*] RPAREN

// ===== Events =====
events_block: "Events" COLON _NL events_section
events_section: (event_decl | _NL)+
event_decl: NAME NAME event_body? _NL
event_body: LPAREN [attr (COMMA attr)*] RPAREN

// ===== Mission =====
mission_block: "Mission" COLON _NL mission_start during_block*
mission_start: "Start" NAME _NL
during_block: "During" NAME COLON _NL transition_body
transition_body: (transition_rule | _NL)+
transition_rule: NAME ARROW NAME _NL

// Inline data literal: TypeName( ... )
datum_inline: NAME LPAREN [datum_args] RPAREN
datum_args: datum_kwarg (COMMA datum_kwarg)* | value (COMMA value)*
datum_kwarg: NAME (COLON|EQUAL) value

// ===== Attributes =====
attr: NAME (COLON|EQUAL) value

// ----- Shared -----
?value: NUMBER
      | STRING
      | datum_inline
      | NAME
      | array
      | DURATION

array: LBRACK [value (COMMA value)*] RBRACK

// ===== Tokens =====
LPAREN: "("
RPAREN: ")"
COMMA:  ","
COLON:  ":"
EQUAL:  "="
ARROW:  "->"
LBRACK: "["
RBRACK: "]"

%import common.NEWLINE        -> NL
%import common.SIGNED_NUMBER  -> NUMBER
%import common.ESCAPED_STRING -> STRING
%import common.WS_INLINE

// e.g., 60s, 60sec, 5m, 2min
DURATION: NUMBER /(s|sec|m|min)/

NAME: /[A-Za-z_][A-Za-z0-9_]*/

// ===== Comments & whitespace =====
COMMENT: /#[^\n]*/
%ignore COMMENT
%ignore WS_INLINE

_NL: NL+
