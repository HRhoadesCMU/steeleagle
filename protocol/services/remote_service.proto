// SPDX-FileCopyrightText: 2025 Carnegie Mellon University - Living Edge Lab
//
// SPDX-License-Identifier: GPL-2.0-only

syntax = "proto3";
package steeleagle.protocol.services.remote_service;

import "common.proto";
import "google/protobuf/any.proto";

/*
 * Used to control a vehicle remotely over ZeroMQ, usually hosted
 * on the server
 */
service Remote {
  // Sends a service request to a vehicle core service (Control, Mission, etc.)
  // over ZeroMQ and returns the response
  rpc Command (CommandRequest)
	returns (stream steeleagle.protocol.common.Response) {}
}

message CommandRequest {
  // Since command sequencing is not built-in to ZeroMQ,
  // it must be done manually; this will be set automatically
  // by the server
  optional uint32 sequence_number = 1;
  // Contains request data for an RPC call
  google.protobuf.Any request = 2;
  // Fully qualified method name
  string method_name = 3;
  // Identity of the sender
  string identity = 4;
  // Target vehicle to send to
  string vehicle_id = 5;
}

message CommandResponse {
  // This response is not seen by the client, but is a wrapper
  // around a normal response; this is done for sequence_number
  // correlation
  uint32 sequence_number = 1;
  // Generic response
  steeleagle.protocol.common.Response response = 2;
}
