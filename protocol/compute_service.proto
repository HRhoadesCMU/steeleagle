// SPDX-FileCopyrightText: 2025 Carnegie Mellon University - Living Edge Lab
//
// SPDX-License-Identifier: GPL-2.0-only

syntax = "proto3";
package protocol.compute_service;

import "common.proto";
import "telemetry.proto";
import "google/protobuf/duration.proto";

/*
 * Used to configure datasinks for sensor streams
 */
service Compute {
  // Get all available compute engines, both local and remote
  rpc GetAvailableDatasinks (GetAvailableDatasinksRequest)
	returns (GetAvailableDatasinksResponse) {}
  // Configure compute preferences
  rpc ConfigureDatasinks (ConfigureDatasinksRequest)
	returns (ConfigureDatasinksResponse) {}
}

message GetAvailableDatasinksRequest {
  protocol.common.Request request = 1;
}

message Datasink {
  // Name of the datasink
  string name = 1;
  // Publishing topic on the datastore
  string topic = 2;
  // Type of model used
  string model = 3;
  // Imaging sensors accepted by this datasink
  repeated protocol.telemetry.ImagingSensorType 
	accepted_inputs = 4;
  // Indicates if the datasink is active
  bool active = 5;
  // Uptime duration
  google.protobuf.Duration uptime = 6;
}

message GetAvailableDatasinksResponse {
  protocol.common.Response response = 1;
  // List of available datasinks
  repeated Datasink datasinks = 2;
}

message ConfigureDatasinksRequest {
  protocol.common.Request request = 1;
  repeated string name = 2; // Name of target datasinks
  repeated bool activate = 3; // Switch to activate/deactivate datasinks
}

message ConfigureDatasinksResponse {
  protocol.common.Response response = 1;
}
