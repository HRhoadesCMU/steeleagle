// SPDX-FileCopyrightText: 2025 Carnegie Mellon University - LivingEdgeLab
//
// SPDX-License-Identifier: GPL-2.0-only

syntax = "proto3";
package protocol.common;

import "google/protobuf/timestamp.proto";


/*
 * Request object for additional request info
 */
message Request {
  string sender = 1; // Identity of sender
  google.protobuf.Timestamp timestamp = 2;
}

/*
 * Responses for RPC functions
 */
enum ResponseStatus {
  OK = 0; // Command received 
  IN_PROGRESS = 1; // Command in progress
  COMPLETED = 2; // Command finished without error
  NOT_SUPPORTED = 3; // Command not supported
  FAILED = 4; // Command resulted in an error
  DENIED = 5; // Command lacks permission
  WARNING = 6; // Command resulted in a warning
}

message Response {
  ResponseStatus status = 1;
  string response_string = 2; // Detailed message on reason for response
  google.protobuf.Timestamp timestamp = 3;
}

// Wrapper over response object, so that it can be sent back as an
// RPC response in case of errors
message GenericResponse {
  Response response = 1;
}

/*
 * Angular offsets or poses in 3 dimensions [degrees]
 */
message Pose {
  double pitch = 1;
  double roll = 2;
  double yaw = 3;
}

/*
 * Representation of the speed in 4-dimensions in ENU coordinates [m/s]
 */
message VelocityENU {
  double north_vel = 1;
  double east_vel = 2;
  double up_vel = 3;
  double angular_vel = 4; // [degrees/s]
}

/*
 * Representation of the speed in 4-dimensions in body coordinates [m/s]
 */
message VelocityBody {
  double forward_vel = 1;
  double right_vel = 2;
  double up_vel = 3;
  double angular_vel = 4; // [degrees/s]
}

/*
 * Position relative to home location in ENU coordinates [meters]
 */
message PositionENU {
  double north = 1;
  double east = 2;
  double up = 3;
  double angle = 4; // [degrees]
}

/**
 * Position relative to current location in body coordinates [meters]
 */
message PositionBody {
  double forward = 1;
  double right = 2;
  double up = 3;
  double angle = 4; // [degrees]
}

/*
 * Location in global coordinates [latitude, longitude]
 */
message Location {
  double latitude = 1;
  double longitude = 2;
  double altitude = 3; // Above MSL [meters]
  double heading = 4;
}
