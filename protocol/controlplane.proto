// SPDX-FileCopyrightText: 2025 Carnegie Mellon University - Living Edge Lab
//
// SPDX-License-Identifier: GPL-2.0-only

syntax = "proto3";

package protocol.controlplane;
import "protocol/common.proto";
import "google/protobuf/timestamp.proto";

message Request {
  int64 seq_num = 1;  // for correlation
  google.protobuf.Timestamp timestamp = 2; // time the request was made
  oneof type {
    VehicleControl veh = 3;
    MissionControl msn = 4;
    ConfigureCompute cpt = 5;
  }
  repeated string hub_ids = 6;
}

message Response {
  int64 seq_num = 1; // for correlation
  google.protobuf.Timestamp timestamp = 2;// time the response was sent
  protocol.common.ResponseStatus resp = 3;
}

/*
* MANUAL # assume the velocity control drone
*/
message VehicleControl {
  oneof param {
    VehicleAction action = 1;
    protocol.common.Location location = 2;
    protocol.common.Velocity velocity = 3;
    protocol.common.Pose gimbal_pose = 4;
    protocol.common.Position position = 5;
    sfixed32 camera_id = 6;
  }
}

enum VehicleAction {
  UNKNOWN_VEHICLE_ACTION = 0;
  TAKEOFF = 1;
  LAND = 2;
  HOVER = 3;
  KILL = 4;
  RTH = 5;
}


/*
* AUTO
*/
message MissionControl {
  string uuid = 1; // unique mission reference for cataloging
  string url = 2; // the URL that specifies the zip file to download
  MissionAction action = 3; // start/stop/pause/resume/download
}

enum MissionAction {
  UNKNOWN_MISSION_ACTION = 0;
  START = 1;
  STOP = 2;
  PAUSE = 3;
  RESUME = 4;
  DOWNLOAD = 5;
}

/*
* COMPUTE
*/
message ConfigureCompute {
    string model = 1; // change model current in use
    protocol.common.HSV lower_bound = 2; // lower bound of HSV filter to apply
    protocol.common.HSV upper_bound = 3; // upper bound of HSV filter to apply
    float threshold = 4; //change confidence threshold of the DNN
    ComputeAction action = 5;
    required string key = 6;
}

enum ComputeAction {
  UNKNOWN_COMPUTE_ACTION = 0;
  START = 1;
  STOP = 2;
  CLEAR = 3;
}
